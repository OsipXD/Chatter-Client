apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'idea'
apply plugin: 'de.mannodermaus.android-junit5'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "ru.endlesscode.chatter"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

kapt {
    generateStubs = true
    correctErrorTypes = true
}

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

ext {
    supportVersion = '26.1.+'

    // UI
    constraintLayoutVersion = '1.0.+'

    // Arch
    moxyVersion = '1.5.+'
    daggerVersion = '2.12'

    // Async
    coroutinesVersion = '0.19.+'

    // JSON
    gsonVersion = '2.8.+'

    // Testing
    spekVersion = '1.1.5'
    mockitoVersion = '2.11.+'
    mockitoKotlinVersion = '1.5.0'
}

dependencies {
    implementation "com.android.support:appcompat-v7:$supportVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVersion"

    // UI
    implementation "com.android.support:design:$supportVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    // Arch
    implementation "com.arello-mobile:moxy:$moxyVersion"
    implementation "com.arello-mobile:moxy-app-compat:$moxyVersion"
    kapt "com.arello-mobile:moxy-compiler:$moxyVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"

    // JSON
    implementation "com.google.code.gson:gson:$gsonVersion"

    // Async
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"

    // Testing
    testImplementation junit5()
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation("org.jetbrains.spek:spek-api:$spekVersion") {
        exclude group: "org.jetbrains.kotlin"
    }
    testImplementation("org.jetbrains.spek:spek-junit-platform-engine:$spekVersion") {
        exclude group: "org.junit.platform"
        exclude group: "org.jetbrains.kotlin"
    }
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:$mockitoKotlinVersion"
    testCompileOnly junit5EmbeddedRuntime()
}

// Configure AS 3.0 to copy over Kotlin classes for each build type to where the IDE can pick them up
afterEvaluate {
    android.buildTypes.each {
        def name = it.name

        def copyTestTask = project.task(type: Copy, "copyKotlin${name.capitalize()}UnitTestClasses") {
            from "build/tmp/kotlin-classes/${name}UnitTest"
            into "build/intermediates/classes/test/$name"
        }

        if (project.tasks.findByName("compile${name.capitalize()}UnitTestKotlin") != null) {
            project.tasks.getByName("compile${name.capitalize()}UnitTestKotlin").finalizedBy copyTestTask
        }

        def copyMainTask = project.task(type: Copy, "copyKotlin${name.capitalize()}Classes") {
            from "build/tmp/kotlin-classes/$name"
            into "build/intermediates/classes/$name"
        }

        if (project.tasks.findByName("compile${name.capitalize()}Kotlin") != null) {
            project.tasks.getByName("compile${name.capitalize()}Kotlin").finalizedBy copyMainTask
        }
    }
}
